name: Update Profile README (Recent Projects)

on:
  schedule:
    - cron: "17 6 * * *"   # täglich 06:17 UTC
  workflow_dispatch:       # manuell startbar
  push:
    paths:
      - ".github/workflows/update-readme.yml"

permissions:
  contents: write

jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build recent projects list
        id: recent
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const username = context.repo.owner;
            // hol 5 zuletzt aktualisierte öffentliche Repos, ohne das Profile-Repo selbst
            const { data: repos } = await github.rest.repos.listForUser({
              username,
              per_page: 20,
              sort: "updated"
            });
            const top = repos
              .filter(r => !r.fork && !r.private && r.name.toLowerCase() !== username.toLowerCase())
              .slice(0, 5);

            function fmt(r){
              const desc = r.description ? ` — ${r.description.replace(/\r?\n/g," ").trim()}` : "";
              const star = r.stargazers_count ? ` ★${r.stargazers_count}` : "";
              const upd = new Date(r.pushed_at).toISOString().slice(0,10);
              return `- [${r.name}](${r.html_url})${desc} _(updated ${upd})_${star}`;
            }
            const list = top.length ? top.map(fmt).join("\n") : "*Noch keine öffentlichen Repos*";

            core.setOutput("list", list);

      - name: Update README section
        run: |
          START="<!-- RECENT_PROJECTS_START -->"
          END="<!-- RECENT_PROJECTS_END -->"
          CONTENT="${{ steps.recent.outputs.list }}"
          esc_content=$(printf '%s\n' "$CONTENT" | sed -e 's/[\/&]/\\&/g')
          awk -v start="$START" -v end="$END" -v repl="$esc_content" '
            BEGIN{inblock=0}
            { if($0 ~ start){print; print repl; inblock=1; next}
              if($0 ~ end){inblock=0}
              if(!inblock) print }' README.md > README.md.new
          mv README.md.new README.md

      - name: Commit changes
        run: |
          if git diff --quiet; then
            echo "No changes."
          else
            git config user.name "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git add README.md
            git commit -m "chore: update recent projects in README"
            git push
          fi
