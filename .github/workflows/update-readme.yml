name: Update README with latest projects

on:
  schedule:
    - cron: '0 8 * * *'   # täglich 08:00 UTC
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

concurrency:
  group: update-readme
  cancel-in-progress: true

jobs:
  update-readme:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Build recent projects list
        id: build
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const username = 'laurinhuebner';
            const { data: repos } = await github.rest.repos.listForUser({
              username,
              sort: 'updated',
              direction: 'desc',
              per_page: 100
            });
            const list = repos
              .filter(r => !r.fork && !r.private)
              .slice(0, 5)
              .map(r => `- [**${r.name}**](${r.html_url})  \n  *${(r.description || 'Keine Beschreibung').replace(/\r?\n/g, ' ').trim()}*`)
              .join("\n") || "*Noch keine öffentlichen Repos*";
            core.setOutput('projects', list);

      - name: Update README section (RECENT_PROJECTS)
        id: apply
        uses: actions/github-script@v7
        env:
          PROJECTS: ${{ steps.build.outputs.projects }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const path = 'README.md';
            const start = '<!-- RECENT_PROJECTS_START -->';
            const end   = '<!-- RECENT_PROJECTS_END -->';
            if (!fs.existsSync(path)) core.setFailed('README.md nicht gefunden');

            let md = fs.readFileSync(path, 'utf8');
            const s = md.indexOf(start), e = md.indexOf(end);
            if (s === -1 || e === -1 || e < s) {
              core.setFailed(`Marker nicht gefunden: ${start} / ${end}`);
            } else {
              const updated = md.slice(0, s + start.length) + '\n' + process.env.PROJECTS + '\n' + md.slice(e);
              if (updated !== md) {
                fs.writeFileSync(path, updated);
                core.setOutput('changed', 'true');
              } else {
                core.setOutput('changed', 'false');
              }
            }

      - name: Create Pull Request
        if: steps.apply.outputs.changed == 'true'
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: auto/readme-projects
          commit-message: "chore: update recent projects (daily)"
          title: "chore: update recent projects (daily)"
          body: |
            This PR updates the auto-generated **Recent Projects** section in the profile README.

            - Source: GitHub API (public repos, latest updated)
            - Count: 5
            - Safe: PR-based to avoid push races on `main`
          base: main
          delete-branch: true
